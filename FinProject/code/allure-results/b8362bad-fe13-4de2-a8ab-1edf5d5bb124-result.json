{"name": "Go block links", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message:", "trace": "self = <code.ui.test.test_ui.TestMainPage object at 0x7f5f1443b5b0>\nmain_page = <code.ui.pages.Main_page.MainPage object at 0x7f5f14478e80>\nlink_name = <BlockLinkNames.INTERNET: (2,)>\n\n    @allure.epic('UI tests')\n    @allure.title('Go block links')\n    @allure.description(\n        \"\"\"\n            Check block links\n        \"\"\"\n    )\n    @pytest.mark.main\n    @pytest.mark.parametrize(\"link_name\", [\n        BlockLinkNames.API,\n        BlockLinkNames.INTERNET,\n        BlockLinkNames.SMTP\n    ])\n    def test_go_block_link(self, main_page, link_name):\n        main_page.block_link(link_name)\n>       main_page.block_link_correct_url(link_name)\n\nlink_name  = <BlockLinkNames.INTERNET: (2,)>\nmain_page  = <code.ui.pages.Main_page.MainPage object at 0x7f5f14478e80>\nself       = <code.ui.test.test_ui.TestMainPage object at 0x7f5f1443b5b0>\n\ntmp/code/ui/test/test_ui.py:460: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntmp/code/ui/pages/Main_page.py:36: in block_link_correct_url\n    link = self.browser.current_url\n        page_name  = <BlockLinkNames.INTERNET: (2,)>\n        self       = <code.ui.pages.Main_page.MainPage object at 0x7f5f14478e80>\nusr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:669: in current_url\n    return self.execute(Command.GET_CURRENT_URL)['value']\n        self       = <selenium.webdriver.remote.webdriver.WebDriver (session=\"d3760f18f66f23c79436fa5bfd32f3c8\")>\nusr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n        driver_command = 'getCurrentUrl'\n        params     = {}\n        response   = {'status': [13, 'unknown error'], 'value': ''}\n        self       = <selenium.webdriver.remote.webdriver.WebDriver (session=\"d3760f18f66f23c79436fa5bfd32f3c8\")>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f5f14479a00>\nresponse = {'status': [13, 'unknown error'], 'value': ''}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n>           raise exception_class(value)\nE           selenium.common.exceptions.WebDriverException: Message:\n\nexception_class = <class 'selenium.common.exceptions.WebDriverException'>\nmessage    = ''\nresponse   = {'status': [13, 'unknown error'], 'value': ''}\nscreen     = ''\nself       = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f5f14479a00>\nstacktrace = None\nstatus     = [13, 'unknown error']\nvalue      = ''\n\nusr/local/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:208: WebDriverException"}, "description": "\n            Check block links\n        ", "steps": [{"name": "Go to link from block", "status": "passed", "steps": [{"name": "Clicking ('xpath', \"//img[@src='/static/images/loupe.png']\")", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//img[@src='/static/images/loupe.png']\")"}, {"name": "timeout", "value": "None"}], "start": 1660000044438, "stop": 1660000044529}], "parameters": [{"name": "link_name", "value": "<BlockLinkNames.INTERNET: (2,)>"}], "start": 1660000044438, "stop": 1660000044536}, {"name": "Check link from block", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: \n\n", "trace": "  File \"/usr/local/lib/python3.8/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/tmp/code/ui/pages/Main_page.py\", line 36, in block_link_correct_url\n    link = self.browser.current_url\n  File \"/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py\", line 669, in current_url\n    return self.execute(Command.GET_CURRENT_URL)['value']\n  File \"/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py\", line 208, in check_response\n    raise exception_class(value)\n"}, "parameters": [{"name": "page_name", "value": "<BlockLinkNames.INTERNET: (2,)>"}], "start": 1660000044537, "stop": 1660000134630}], "parameters": [{"name": "link_name", "value": "<BlockLinkNames.INTERNET: (2,)>"}], "start": 1660000044438, "stop": 1660000134649, "uuid": "d1297618-371a-441f-88a1-46a74d53b550", "historyId": "886ee4725bc881707527cd4b58bedc26", "testCaseId": "1e1c20f9493fb3dd8a8ecfb537a3dc18", "fullName": "ui.test.test_ui.TestMainPage#test_go_block_link", "labels": [{"name": "epic", "value": "UI tests"}, {"name": "tag", "value": "main"}, {"name": "parentSuite", "value": "ui.test"}, {"name": "suite", "value": "test_ui"}, {"name": "subSuite", "value": "TestMainPage"}, {"name": "host", "value": "a79a7f58d1d5"}, {"name": "thread", "value": "26-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ui.test.test_ui"}]}