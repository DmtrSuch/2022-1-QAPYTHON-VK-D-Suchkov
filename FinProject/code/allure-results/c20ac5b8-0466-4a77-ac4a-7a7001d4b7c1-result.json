{"name": "Logout", "status": "broken", "statusDetails": {"message": "TypeError: string indices must be integers", "trace": "config = {'browser': 'chrome', 'url': 'http://app:8087/login'}\n\n    @pytest.fixture(scope='function')\n    def browser(config):\n        url = config['url']\n>       browser = get_driver(config)\n\nconfig     = {'browser': 'chrome', 'url': 'http://app:8087/login'}\nurl        = 'http://app:8087/login'\n\ntmp/code/ui/conftest.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntmp/code/ui/conftest.py:61: in get_driver\n    browser = webdriver.Remote(command_executor=f\"finproject_selenoid_1:4444\",\n        browser_name = 'chrome'\n        caps       = {'browserName': 'chrome', 'version': '99.0'}\n        config     = {'browser': 'chrome', 'url': 'http://app:8087/login'}\n        options    = <selenium.webdriver.chrome.options.Options object at 0x7fc10dc23340>\nusr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:157: in __init__\n    self.start_session(capabilities, browser_profile)\n        browser_profile = None\n        capabilities = {'browserName': 'chrome', 'browserVersion': '99.0', 'goog:chromeOptions': {'args': [], 'excludeSwitches': ['enable-logging'], 'extensions': []}, 'platform': 'ANY', ...}\n        command_executor = 'finproject_selenoid_1:4444'\n        desired_capabilities = {'browserName': 'chrome', 'version': '99.0'}\n        file_detector = None\n        keep_alive = False\n        options    = <selenium.webdriver.chrome.options.Options object at 0x7fc10dc23340>\n        proxy      = None\n        self       = <selenium.webdriver.remote.webdriver.WebDriver (session=\"None\")>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.webdriver.WebDriver (session=\"None\")>\ncapabilities = {'browserName': 'chrome', 'browserVersion': '99.0', 'goog:chromeOptions': {'args': [], 'excludeSwitches': ['enable-logging'], 'extensions': []}, 'platform': 'ANY', ...}\nbrowser_profile = None\n\n    def start_session(self, capabilities, browser_profile=None):\n        \"\"\"\n        Creates a new session with the desired capabilities.\n    \n        :Args:\n         - browser_name - The name of the browser to request.\n         - version - Which browser version to request.\n         - platform - Which platform to request the browser on.\n         - javascript_enabled - Whether the new session should support JavaScript.\n         - browser_profile - A selenium.webdriver.firefox.firefox_profile.FirefoxProfile object. Only used if Firefox is requested.\n        \"\"\"\n        if not isinstance(capabilities, dict):\n            raise InvalidArgumentException(\"Capabilities must be a dictionary\")\n        if browser_profile:\n            if \"moz:firefoxOptions\" in capabilities:\n                capabilities[\"moz:firefoxOptions\"][\"profile\"] = browser_profile.encoded\n            else:\n                capabilities.update({'firefox_profile': browser_profile.encoded})\n        w3c_caps = _make_w3c_caps(capabilities)\n        parameters = {\"capabilities\": w3c_caps,\n                      \"desiredCapabilities\": capabilities}\n        response = self.execute(Command.NEW_SESSION, parameters)\n        if 'sessionId' not in response:\n            response = response['value']\n>       self.session_id = response['sessionId']\nE       TypeError: string indices must be integers\n\nbrowser_profile = None\ncapabilities = {'browserName': 'chrome', 'browserVersion': '99.0', 'goog:chromeOptions': {'args': [], 'excludeSwitches': ['enable-logging'], 'extensions': []}, 'platform': 'ANY', ...}\nparameters = {'capabilities': {'alwaysMatch': {'browserName': 'chrome', 'browserVersion': '99.0', 'goog:chromeOptions': {'args': []..., 'goog:chromeOptions': {'args': [], 'excludeSwitches': ['enable-logging'], 'extensions': []}, 'platform': 'ANY', ...}}\nresponse   = 'You are using Selenoid 1.10.8!'\nself       = <selenium.webdriver.remote.webdriver.WebDriver (session=\"None\")>\nw3c_caps   = {'alwaysMatch': {'browserName': 'chrome', 'browserVersion': '99.0', 'goog:chromeOptions': {'args': [], 'excludeSwitches': ['enable-logging'], 'extensions': []}, 'platformName': 'any'}, 'firstMatch': [{}]}\n\nusr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:255: TypeError"}, "description": "\n            Logout\n        ", "start": 1659983406383, "stop": 1659983406383, "uuid": "208bf7bb-1fec-4ee3-9403-382afb9f98f5", "historyId": "e1a8cbc18d27b27a2cf0dcc9779d42ff", "testCaseId": "588050c41bcd002faa9011ed9f4fb560", "fullName": "ui.test.test_ui.TestMainPage#test_logout", "labels": [{"name": "epic", "value": "UI tests"}, {"name": "tag", "value": "main"}, {"name": "parentSuite", "value": "ui.test"}, {"name": "suite", "value": "test_ui"}, {"name": "subSuite", "value": "TestMainPage"}, {"name": "host", "value": "00d3b625efa4"}, {"name": "thread", "value": "8-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ui.test.test_ui"}]}